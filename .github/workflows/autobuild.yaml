name: Build binary files to selected branch (DANGER AREA)
on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout

      - name: Refresh data folder from source
        run: |
          rm -rf compiled/editor/data
          rm -rf compiled/patch/game-data.ts
          cp -rf src/data/ compiled/editor/data/
          cp -rf src/patch/game-data.ts compiled/patch/
          rm -rf compiled/editor/offlineEditor-windows.exe
          rm -rf compiled/editor/offlineEditor-linux.sh
          rm -rf compiled/patch/patcher-windows.exe
          rm -rf compiled/patch/patcher-linux.sh

  build:
    needs: prepare
    strategy:
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
        
    steps:
      - uses: actions/checkout@v4
        name: Checkout
          
      - uses: actions/setup-python@v5
        name: Setup Python
        with:
          python-version: ${{ matrix['python-version'] }}

      - name: Build Executables (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          pip install pyinstaller -r src/requirements.txt
          pyinstaller --distpath compiled/editor --workpath /tmp/win/editor --name offlineEditor-windows.exe --clean --icon="src/data/icon.ico" -F src/main.py
          pyinstaller --distpath compiled/patch --workpath /tmp/win/patch --name patcher-windows.exe --clean --icon="src/data/icon.ico" -F src/patch/patcher.py

      - name: Upload Artifacts (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: offlineEditor-windows
          path: |
            compiled/editor/offlineEditor-windows.exe
            compiled/editor/data/
            compiled/patch/patcher-windows.exe
            compiled/patch/game-data.ts

      - name: Build Executables (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          pip install pyinstaller -r src/requirements.txt
          pyinstaller --distpath compiled/editor --workpath /tmp/linux/editor --name offlineEditor-linux.sh --clean --icon="src/data/icon.ico" -F src/main.py
          pyinstaller --distpath compiled/patch --workpath /tmp/linux/patch --name patcher-linux.sh --clean --icon="src/data/icon.ico" -F src/patch/patcher.py

      - name: Upload Artifacts (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: offlineEditor-linux
          path: |
            compiled/editor/offlineEditor-linux.sh
            compiled/editor/data/
            compiled/patch/patcher-linux.sh
            compiled/patch/game-data.ts
      
      - name: Build Executables (Mac)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          python3 -m ensurepip
          pip install pyinstaller -r src/requirements.txt
          pyinstaller --distpath compiled/editor --workpath /tmp/mac/editor --name offlineEditor-mac.sh --clean --icon="src/data/icon.ico" -F src/main.py
          pyinstaller --distpath compiled/patch --workpath /tmp/mac/patch --name patcher-mac.sh --clean --icon="src/data/icon.ico" -F src/patch/patcher.py

      - name: Upload Artifacts (Mac)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: offlineEditor-mac
          path: |
            compiled/editor/offlineEditor-mac.sh
            compiled/editor/data/
            compiled/patch/patcher-mac.sh
            compiled/patch/game-data.ts
            
      - name: Commit Artifacts
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git pull origin
          git add .
          git commit -m "Automated build"
          git push origin


          https://raw.githubusercontent.com/devicons/devicon/master/icons/algolia/algolia-original.svg
          https://raw.githubusercontent.com/devicons/devicon/master/icons/algolia/algolia-original.svg
          https://raw.githubusercontent.com/devicons/devicon/master/icons/algolia/algolia-original.svg
          https://raw.githubusercontent.com/devicons/devicon/master/icons/algolia/algolia-original.svg
          https://raw.githubusercontent.com/devicons/devicon/master/icons/algolia/algolia-original.svg